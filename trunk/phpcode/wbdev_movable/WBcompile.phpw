<?php

/**
 * WINBINDER - A native Windows binding for PHP
 * 
 * Copyright © 2004-2006 Hypervisual - see LICENSE.TXT for details
 * Author: Hans
 * 
 * WBcompile application
 */
// ------------------------------------------------------------ SYSTEM PARAMETERS
define("PATH_SCRIPT", dirname(__FILE__) . "/");
define("PATH_DATA", PATH_SCRIPT);
define("PATH_RES", PATH_SCRIPT . "resources/");
// ----------------------------------------------------------------- DEPENDENCIES
// Stefano: adapted path dependency
include PATH_SCRIPT . "../include/winbinder.php";
// Stefano: corrected import reflecting the renaming of genmakeWB.php
include PATH_SCRIPT . "compile_wb.php";
// -------------------------------------------------------------------- CONSTANTS
// Control identifiers
define("ID_TIMER", 100);

define("ID_LABEL", 101);
define("ID_ABOUT", 102);

define("ID_STATBAR", 103);

define("ID_EDS", 150);
define("ID_BS", 151);
define("ID_BCOMP", 152);
define("ID_LIST", 153);
define("ID_EDIT", 154);
define("ID_BSUB", 155);
define("ID_BSHOW", 156);

define("APPNAME", "Compile WinBinder"); // Application name
define("WELCOME_TEXT", "Point me to the c sources.");
// -------------------------------------------------------------- EXECUTABLE CODE
// Create main window, then assign a procedure and an icon to it
$mainwin = wb_create_window(null, AppWindow, APPNAME , 0, 0, 10, 10, WBC_INVISIBLE | WBC_NOTIFY | WBC_TOP, WBC_DBLCLICK);
wb_set_handler($mainwin, "process_main");
wb_set_image($mainwin, PATH_RES . "re.ico");
// Create menu
wb_create_control($mainwin, Menu, array("&File",
        array(IDCLOSE, "E&xit\tAlt+F4", null, PATH_RES . "menu_exit.bmp"),
        "&Help",
        array(ID_ABOUT, "&About this application", null, PATH_RES . "menu_help.bmp"),
        ));

wb_create_control($mainwin, Frame, "", 0, 2, 310, 2);
// Create label
wb_create_control($mainwin, Label, WELCOME_TEXT, 115, 20, 147, 22, ID_LABEL, WBC_LEFT);
wb_create_control($mainwin, Label, "", 30, 50 , 212, 22, ID_EDS, WBC_RIGHT);
$list = wb_create_control($mainwin, ListView, "", 30, 85 , 252, 200, ID_LIST, WBC_RIGHT | WBC_VISIBLE | WBC_ENABLED | WBC_SINGLE | WBC_LINES | WBC_CHECKBOXES);
wb_set_image($list, PATH_RES . "dcqok.bmp", GREEN, 0, 4);
wb_create_control($mainwin, PushButton, "...", 252, 50, 30, 22, ID_BS);

wb_create_control($mainwin, PushButton, "Compile for checked versions", 60, 290, 202, 22, ID_BCOMP, WBC_CENTER);

wb_create_control($mainwin, Frame, "Selected Item", 30, 320, 252, 60);
wb_create_control($mainwin, EditBox, "", 50, 340, 100, 22, ID_EDIT);
wb_create_control($mainwin, PushButton, "Submit", 160, 340, 50, 22, ID_BSUB);
wb_create_control($mainwin, PushButton, "Log", 220, 340, 50, 22, ID_BSHOW);

wb_set_size($mainwin, 315, 445);

wb_create_control($mainwin, StatusBar, APPNAME, 0, 0, 0, 0, ID_STATBAR);

wb_set_position($mainwin, WBC_CENTER, WBC_CENTER);
wb_create_timer($mainwin, ID_TIMER, 1000);
manage_compile($mainwin, "", "set");
if (file_exists("wbcomp.ini")) {
    $wbdef = unserialize(file_get_contents("wbcomp.ini"));
    wb_set_text(wb_get_control($mainwin, ID_EDS), $wbdef['pointpath']);

    manage_compile($mainwin, "", 'check');
} 
wb_set_visible($mainwin, true);
// Enter application loop
wb_main_loop();
// -------------------------------------------------------------------- FUNCTIONS
/* Process main window commands */

function process_main($window, $id, $ctrl = 0, $lparam = 0)
{
    switch ($id) {
        case ID_TIMER:
            wb_set_style($window, WBC_TOP, false);
            wb_destroy_timer($window, ID_TIMER);
            break;
        case ID_BCOMP:
            manage_compile($window, $ctrl, "comp");
            break;
        case ID_LIST:
            if ($lparam == WBC_DBLCLICK) {
                manage_compile($window, $ctrl, 'print');
            } else {
                manage_compile($window, $ctrl, 'item');
            } 

            break;
        case ID_EDIT:
            manage_compile($window, $ctrl, "edit");
            break;
        case ID_BSUB:
            manage_compile($window, $ctrl, "submit");
            break;
        case ID_BSHOW:
            manage_compile($window, $ctrl, "print");
            break;
        case ID_BS:
            manage_compile($window, $ctrl, "select");
            break;
        case ID_ABOUT:
            wb_message_box($window, "WinBinder version " . WBC_VERSION . "\nPHP version " . PHP_VERSION . "\n" .
                wb_get_system_info("osversion"), "About " . APPNAME);
            break;
        case IDCLOSE: // IDCLOSE is predefined
            manage_compile($window, $ctrl, "save_pars");
            wb_destroy_window($window);
            break;
    } 
} 
function manage_compile($window, $target , $action)
{
    static $ID_LISThnd, $ID_EDShnd, $ID_BShnd, $ID_BCOMPhnd , $dll_ver, $comp_pars;
    static $ID_EDIThnd, $ID_BSUBhnd, $ID_BShnd, $ID_BSHOWhnd, $item , $version;
    global $wbdef;

    switch ($action) {
        case 'set':

            $item = false;
            $ID_EDShnd = wb_get_control($window, ID_EDS);
            $ID_BShnd = wb_get_control($window, ID_BS);
            $ID_EDIThnd = wb_get_control($window, ID_EDIT);
            $ID_BSUBhnd = wb_get_control($window, ID_BSUB);
            $ID_BSHOWhnd = wb_get_control($window, ID_BSHOW);
            $ID_BCOMPhnd = wb_get_control($window, ID_BCOMP);
            $ID_LISThnd = wb_get_control($window, ID_LIST);
            wb_set_enabled($ID_EDShnd , true);
            wb_set_enabled($ID_BShnd , true);
            wb_set_enabled($ID_BCOMPhnd , false);
            wb_set_enabled($ID_EDIThnd , false);
            wb_set_enabled($ID_BSUBhnd , false);
            wb_set_enabled($ID_BSHOWhnd , false);
            wb_set_text($ID_EDShnd , "Point me to csource -->");
            wb_set_text(wb_get_control($window, ID_LABEL) , WELCOME_TEXT);
            wb_set_text($ID_LISThnd, array(
                    array("C", 25),
                    array("Product Name", 100),
                    array("Stat", 35),
                    array("for PHP Version", 87),
                    ));
            break;
        case 'comp':

            wb_set_text(wb_get_control($window, ID_LABEL), "  Compiling .....");
            wb_set_text(wb_get_control($window, ID_STATBAR), ""); 
            // get list to compile
            $tmp = wb_get_value($ID_LISThnd);
            if (count($tmp) > 0) { // anything to compile
                $comp_list = array();
                foreach($tmp as $i) {
                    $comp_do = wbtemp_get_listview_text($ID_LISThnd, $i);
                    $comp_vers = $comp_do[3];
                    $label_text = wb_get_text(wb_get_control($window, ID_STATBAR)) ;
                    wb_refresh(wb_get_control($window, ID_LABEL), true);
                    $log = compile_wb(wb_get_text($ID_EDShnd) . "core\\", $comp_vers, $comp_do[1]);
                    If ($log == null) {
                        $log = "did not compile at all!  fatal error!";
                    } ;
                    $res = file_put_contents("P" . $comp_vers . "log.txt", $log);
                    // Stefano changed call of strstr to stristr to cover all possible cases
                    if (stristr($log, "error") !== false) {
                        wb_set_text(wb_get_control($window, ID_STATBAR), $label_text . " Err. $comp_vers; ");
                        wb_set_item_image($ID_LISThnd, 1, $i, 2); 
                    } else if (stristr($log, "warning") !== false) {
                        wb_set_text(wb_get_control($window, ID_STATBAR), $label_text . " Warn. $comp_vers; ");
                        wb_set_item_image($ID_LISThnd, 2, $i, 2); 
                    } else {
                        wb_set_text(wb_get_control($window, ID_STATBAR), $label_text . " OK $comp_vers; ");
                        wb_set_item_image($ID_LISThnd, 3, $i, 2); 
                    } ; 
                } 
            } 
            wb_set_text(wb_get_control($window, ID_LABEL), " Compiling done!");
            break;
        case 'edit':
            wb_set_enabled($ID_BSUBhnd , true);
            break;
        case 'item':
            $item = wb_get_selected($target);
            if ($item != false) {
                $item = $item[0];
                wb_set_text($ID_EDIThnd, wb_get_text($ID_LISThnd, $item, 1));
                wb_set_enabled($ID_EDIThnd , true);
                wb_set_enabled($ID_BSHOWhnd , true);
            } else {
                wb_set_text($ID_EDIThnd, "");
                wb_set_enabled($ID_EDIThnd , false);
                wb_set_enabled($ID_BSHOWhnd , false);
            } 
		$version = wb_get_text($target,$item,3);
            wb_set_enabled($ID_BSUBhnd , false);
            break;
        case 'submit':
            wb_set_text($ID_LISThnd, wb_get_text($ID_EDIThnd), $item, 1);
             wb_set_enabled($ID_BSUBhnd , false);
           break;
        case 'print': 
            wb_exec(wb_find_file("notepad.exe"), PATH_BASE . "P" . $version . "log.txt"); ;
            break;
        case 'save_pars':
            $wbdef['pointpath'] = wb_get_text($ID_EDShnd) ;
            $comp_pars = array("??"); 
            // update the values
            $wbdef['vers'] = $comp_pars;
            file_put_contents("wbcomp.ini", serialize($wbdef));
            break;
        case 'select':
            $src_path = wb_sys_dlg_path($window, "Select source path", $wbdef['pointpath']);
            if ($src_path == "") {
                break;
            } 
            // quitt gives ""
            $tmp = strpos($src_path, "\csource");
            if ($tmp !== false) {
                $src_path = substr($src_path, 0, $tmp) . "\csource\\";
                $wbdef['pointpath'] = $src_path;
            } else {
                manage_compile($window, '', 'set');
                wb_set_text($ID_EDShnd , " -- not valid --Point me to csource -->");
                wb_set_text($window, APPNAME);
                break;
            } 
            wb_set_text($ID_EDShnd , $src_path);
        case 'check':
            $v_file = wb_get_text($ID_EDShnd) . "core\wb\wb_version.h";
            if (is_file($v_file)) {
                $tmp = file_get_contents($v_file);
                $tmp = substr(strstr($tmp, "#define WINBINDER_VERSION"), 0, 50);
                $tmp = explode('"', $tmp);
                $dll_ver = $tmp[1];
                wb_set_text($window, APPNAME . " " . $dll_ver);
                wb_set_text(wb_get_control($window, ID_LABEL), " Winbinder $dll_ver for PHP $version"); 
                // proper paths and versions and put into listview
                wb_create_items($ID_LISThnd, null, true);
                $fdirs = get_php_dirs(wb_get_text($ID_EDShnd));
                if (count($fdirs) > 0) {
                    $i = 0;
                    foreach($fdirs as $tmp) { // set listview
                        $row = array(0, $tmp, "",  substr($tmp, 4));
                        wb_create_items($ID_LISThnd, array($row), false);
                        wb_set_item_image($ID_LISThnd, 0, $i, 2);
                        $list[$i] = $row;
                        $i++;
                    } 

                    wb_set_enabled($ID_BCOMPhnd , true);
                } 
            } else {
                wb_set_text(wb_get_control($window, ID_STATBAR), " Source files not found");
                wb_set_text($ID_EDShnd , " -- not valid --Point me to csource -->");
                wb_set_enabled($ID_BCOMPhnd , false);
            } 
            break;
        default: ;
    } // switch
} 
function get_php_dirs($base, $pre = 'php-')
{
    $res = array();
    if (is_dir($base)) {
        $basehnd = opendir($base);
        while ($dir = readdir ($basehnd)) {
            if ($dir != "." && $dir != "..") {
                if (is_dir($base . $dir)) {
                    if (stristr($dir, $pre) != false) {
                        $res[] = $dir;
                    } 
                } 
            } 
        } 

        closedir($basehnd);
    } 
    return $res;
} 
// ------------------------------------------------------------------ END OF FILE

?>